#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+BEGIN_COMMENT
#+STYLE: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+STYLE: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+END_COMMENT
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: Programming & Communication Methods
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
<div class="github-fork-ribbon-wrapper left">
<div class="github-fork-ribbon">
<a href="https://github.com/stsb11/as_theory">Fork me on GitHub</a>
</div>
</div>
<center>
<img src='http://wc1.smartdraw.com/specials/images/examples/flowchart-symbols.gif' width=40%>
</center>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

e* Introduction
[[file:img/pic.jpg]]
:PROPERTIES:
:HTML_CONTAINER_CLASS: intro
:END:
** What are PIC chips?
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
Peripheral Interface Controllers are small silicon chips which can be programmed to perform useful tasks.
In school, we tend to use Genie branded chips, like the C08 model you will use in this project. Others (e.g. PICAXE) are available.
PIC chips allow you connect different inputs (e.g. switches) and outputs (e.g. LEDs, motors and speakers), and to control them using flowcharts.
Chips such as these can be found everywhere in consumer electronic products, from toasters to cars. 

While they might not look like much, there is more computational power in a single PIC chip used in school than there was in the space shuttle that went to the moon in the 60's!
** When would I use a PIC chip?
Imagine you wanted to make a flashing bike light; using an LED and a switch alone, you'd need to manually push and release the button to get the flashing effect. A PIC chip could be programmed to turn the LED off and on once a second.
In a board game, you might want to have an electronic dice to roll numbers from 1 to 6 for you. 
In a car, a circuit is needed to ensure that the airbags only deploy when there is a sudden change in speed, AND the passenger is wearing their seatbelt, AND the front or rear bumper has been struck. PIC chips can carry out their instructions very quickly, performing around 1000 instructions per second - as such, they can react far more quickly than a person can. 
* Device Programming
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Flowcharts
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- *PICs* (Programmable Interface Controllers) revolutionised control systems engineering when they were first released in the mid 1980s. 
- They enable programs to be created which allow the detection of both analogue and digital input components, and the control of a wide variety of different outputs. 
- *PLCs* (Programmable Logic Controllers) provide turn-key control solutions to control systems problems. They are effectively a computer in a box, where input and outputs are wired directly into a module, which is then programmed. 
- This means no PCB needs to be designed, and in the event of hardware failure, a new box can be connected straight away, the program uploaded to the PLC, and the unit can go straight back into operation. 


- Flowcharts are often used as one method of programming both PICs and PLCs. The shapes you will need to know about for the exam are:
    - start
    - end
    - input
    - output
    - process
    - decision
    - feedback
    - increment
    - subroutines

** Illustration
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Drawing is a core engineering skill, from sketching initial ideas on paper, through to 2D or 3D CAD to create cutting sheets for parts to be machined from. You need to be aware of appropriate applications of:
    - CAD: Computer Aided Design. Programs like SolidWorks, Cinema4D, AutoCAD (and in schools, TechSoft 2D) can all be used to create precision schematics for parts. Once designs are complete, work can be sent to CNC (Computer Numerical Controlled) machines to be manufactured. CAD graphics can be enhanced by the use of applying textures (e.g brick or wood finishes) to give a more realistic presentation of how a product will look when made in the real World. 
    - Sketching: At concept stage, rough pencil sketches are a great way for design teams to share ideas and quickly develop solutions to problems.
    - Drawing: Before CAD started to dominate engineering drawing in the mid 1980's, traditional technical drawing used to be undertaken by [[http://en.wikipedia.org/wiki/Drafter][draughtsmen]], who would produce technical drawings under the supervision of an engineer. This is still taught as a skill by universities.
    - Photography: This is useful for engineers to take snapshots of progress with different aspects of a project, so they can be posted/emailed to other engineers in a team. 


- Sometimes, quantitative illustration is needed for a client. This can take the form of...
    - Graphs
    - Pie charts
    - Bar charts
    - Pictograms

- Modelling allows engineers to test different design ideas for mechainisms, programs or housings. By creating a model, issues can be identified in a project, and ways to improve them can be identified. They could take the form of: 3D forms, mock-ups, prototypes or scale models.
* Recap
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Past Paper Questions
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- *2010, Q6.* (a) Use a flowchart to explain the operation of a pedestrian road crossing. Your answer should make reference to:
- the control button for the pedestrian to start the system
- the lights controlling the traffic
- the lights controlling pedestrian movement
- any other indicators you feel should be included. /(10 marks)/

(b) With the aid of a systems diagram, describe in detail the control system for the pedestrian road crossing. /(10 marks)/


[[file:index.html][Return to homepage]]
